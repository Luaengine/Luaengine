scrupp.PLATFORM="Linux"
if type(io.popen([[tree ]]..scrupp.getSearchPath()[1]):lines()()or nil)=="string"then scrupp.PLATFORM="Windows"end

event={{{},{}},{{},{}}} --Updates with the current binds.

core={}
core.title=function(a,b,c,d,e,f)a=a or""b=b or 1 c=c or 1 d=d or 8 e=e or false f=f or false scrupp.init(a,b,c,d,e,f)scrupp.setDelta(0)end
core.font=function(a,b)a=a or 30 b=b or"dll/fonts/Vera.ttf"return scrupp.addFont(b,a)end
core.image=function(a)a=a or"dll/ico.png"return scrupp.addImage(a)end
core.dir=function()if scrupp.PLATFORM=="Windows"then return string.gsub(io.popen([[cd]]):lines()(),"\\","/")else return string.gsub(string.sub(scrupp.getSearchPath()[1],3),"\\","/")end end
core.run=function(a)end
dofile(core.dir().."dll/scripts/file.lua")

string.table=function(a)a=a or"{}"local b={}if string.sub(a,1,1)=="{"and string.sub(a,-1)=="}"then for k,v in pairs(string.explode(string.sub(a,2,-2),","))do b[k]=v end end return b end
string.bool=function(a)a=a or"false"if a=="true"then return true else return false end end
string.explode=function(a,b)a=a or""b=b or""local c,d="",{}if type(b)=="string"then for i=1,#a do if b==""then d[table.count(d)+1]=string.sub(a,i,i)else if string.sub(a,i,i)==b then d[table.count(d)+1]=c c=""else c=c..string.sub(a,i,i)end end end if c~=""then d[table.count(d)+1]=c end else for i=1,table.count(a)do d[i]=string.sub(a,i,i)end end return d end

number={}
number.bool=function(a)a=a or 0 if a==1 then return true elseif a==0 then return false end end
number.round=function(a)a=a or 0 return a%1>0.5555555 and math.ceil(a)or math.floor(a)end
number.clamp=function(a,b,c)a=a or 0 b=b or 0 c=c or 0 if a<b then return b elseif a>c then return c else return a end end

table.string=function(a,b)a=a or{}b=b or false local c,d="{",0 for k,v in pairs(a)do if type(v)=="table"then v=table.string(v,b)elseif type(v)=="string"then v='"'..v..'"' end if b then v=k..":"..v end d=d+1 if k==table.count(a)then c=c..v else c=c..v..","end end return c.."}"end
table.join=function(a)a=a or{}local b=""for k,v in pairs(a)do b=b..tostring(v)end return b end
table.bool=function(a)a=a or{}if table.count(a)>0 then return true else return false end end
table.push=function(a,b)a=a or{}b=b or true for i=1,table.count(a)+1 do if a[i]==nil then a[i]=b return i end end end
table.keyvalue=function(a)a=a or{}local b,c={},0 for k,v in pairs(a)do c=c+1 b[c]=k end return b end
table.count=function(a)a=a or {}local b=0 for k,v in pairs(a)do b=b+1 end return b end
table.length=function(a)a=a or {}local b=0 for k,v in pairs(a)do if v>b then b=v end end return b end

bool={}
bool.string=function(a)a=a or false if a==true then return"true"elseif a==false then return"false"end end
bool.number=function(a)a=a or false if a==true then return 1 elseif a==false then return 0 end end

compress={}
compress.count=function(a)a=a or""local b,c,d="",0,nil for k,v in pairs(string.explode(a))do d=d or v if v==d then c=c+1 else b=b..d..c c=1 d=v end end b=b..(d or"")..c return b end
compress.pattern=function(a)
    a=a or""local b,c,d,z="",{},{},0
    for i=math.floor(#a/2),4,-1 do
        z=table.count(d)+1
        d[z]={}for n=1,#a,i do
            d[z][table.count(d[z])+1]=string.sub(a,n,number.clamp(n+i-1,1,#a))
        end
    end for k,v in pairs(d)do
        z=table.count(v)
        d[k]={d[k],{}}
        for i=1,z do
            d[k][2][v[i]]=d[k][2][v[i]]or 0
            d[k][2][v[i]]=d[k][2][v[i]]+1
        end
    end z=1
    for k,v in pairs(d)do
        for l,i in pairs(v[2])do
            if i<2 then
                d[k][2][l]=nil
            end
        end
        if table.count(d[k][2])>table.count(d[z][2])then
            z=k
        end
    end
    --sort the resulting table here
    for k,v in pairs(d[z][2])do
        c[table.count(c)+1]=k
        d[z][2][k]=table.count(c)
    end
    for k,v in pairs(d[z][1])do local y=d[z][2][v]
        if y then local x=y y=""for l,i in pairs(string.explode(tostring(x)))do y=y.."$"..i end else if v=="$"then y=y.."$"end y=v end
        b=b..y
    end
    return b,c
end
compress.enpattern=function(a)a=a or{}local b=""for k,v in pairs(a)do b=b..k..":"..v if k<table.count(a)then b=b..";"end end return b end
compress.alpha=function(a)a=a or""local b,c,d,e="",0,nil,{[1]="a",[2]="b",[3]="c",[4]="d",[5]="e",[6]="f",[7]="g",[8]="h",[9]="i"}local z=function(a)local y=""for k,v in pairs(string.explode(tostring(a)))do y=y..e[tonumber(v)]end return y end for k,v in pairs(string.explode(a))do d=d or v if v==d then c=c+1 else if d=="1"then b=b..z(c) else b=b..c end c=1 d=v end end return b end

crypto={}
crypto.ascii={nil,{},{},{},{},{},{},{},{},{},{},{},{},"\n",{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},--[[NUL,SOH,STX,ETX,EOT,ENQ,ACK,BEL,BS,HT,LF,VT,FF,CR,SO,SI,DLE,DC1,DC2,DC3,DC4,NAK,SYN,ETB,CAN,EM,SUB,ESC,FS,GS,RS,US,]]" ","!","\"","#","$","%","&","'","(",")","*","+",",","-",".","/","0","1","2","3","4","5","6","7","8","9",":",";","<","=",">","?","@","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","[","\\","]","^","_","'","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","","|","","~","","€","","‚","ƒ","„","…","†","‡","ˆ","‰","Š","‹","Œ","","Ž","","","‘","’","“","”","•","–","—","˜","™","š","›","œ","","ž","Ÿ","","¡","¢","£","¤","¥","¦","§","¨","©","ª","«","¬","&shy;","®","¯","°","±","²","³","´","µ","¶","·","&cedil;","¹","º","»","¼","½","¾","¿","À","Á","Â","Ã","Ä","Å","Æ","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","×","Ø","Ù","Ú","Û","Ü","Ý","Þ","ß","à","á","â","ã","ä","å","æ","ç","è","é","ê","ë","ì","í","î","ï","ð","ñ","ò","ó","ô","õ","ö","÷","ø","ù","ú","û","ü","ý","þ","ÿ"}
crypto.convert=function(a)a=a or""for i=1,#crypto.ascii do if a==crypto.ascii[i]then return i-1 end end return -1 end
crypto.binary=function(a,b)a=a or{}b=b or""if type(a)=="table"then else if type(a)=="string"then a=string.explode(a)else a={a}end end for k,v in pairs(a)do local c,d="00000000",nil d=function(a)if string.sub(c,a,a)=="1"then c=string.sub(c,1,a-1).."0"..string.sub(c,a+1)d(a-1)else c=string.sub(c,1,a-1).."1"..string.sub(c,a+1)end end for i=1,crypto.convert(v)do d(8)end b=b..c end return b end
crypto.hmac=function(a,b,c)a=a or"a"b=b or 1 local z,y={},0 for i=1,b do z[i]=0 end for k,v in pairs(string.explode(a))do for i,l in pairs(string.explode(crypto.binary(v)))do y=y+1 if y>b then y=1 end if tonumber(l)==z[y]then z[y]=0 else z[y]=1 end end end return table.join(z) end

shape={}
shape.square=function(a,b,c,d,e,f)a=a or{0,0}b=b or{1,1}c=c or 0 d=d or{255,255,255,255}e=e or 1 f=f or 1 local c1,c2=0,0 return{color=d,centerX=0,centerY=0,scaleX=1,scaleY=1,rotate=c,fill=true,antialiasing=true,size=1,c1+a[1]-b[1]/2,c2+a[2]-b[2]/2,c1+a[1]+b[1]/2,c2+a[2]-b[2]/2,c1+a[1]+b[1]/2,c2+a[2]+b[2]/2,c1+a[1]-b[1]/2,c2+a[2]+b[2]/2,c1+a[1]-b[1]/2,c2+a[2]-b[2]/2}end
shape.squareoutline=function(a,b,c,d,e,f)a=a or{0,0}b=b or{1,1}c=c or 0 d=d or{255,255,255,255}e=e or 1 f=f or 1 local c1,c2=0,0 return{color=d,centerX=0,centerY=0,scaleX=1,scaleY=1,rotate=c,fill=false,antialiasing=true,size=1,c1+a[1]-b[1]/2,c2+a[2]-b[2]/2,c1+a[1]+b[1]/2,c2+a[2]-b[2]/2,c1+a[1]+b[1]/2,c2+a[2]-b[2]/2,c1+a[1]+b[1]/2,c2+a[2]+b[2]/2,c1+a[1]+b[1]/2,c2+a[2]+b[2]/2,c1+a[1]-b[1]/2,c2+a[2]+b[2]/2,c1+a[1]-b[1]/2,c2+a[2]+b[2]/2,c1+a[1]-b[1]/2,c2+a[2]-b[2]/2}end
shape.circle=function(a,b,c,d)a=a or{0,0}b=b or{1,1}c=c or 3 d=d or{255,255,255,255}local t={color=d,centerX=0,centerY=0,scaleX=1,scaleY=1,rotate=c,fill=true,antialiasing=true,size=1}local z=0 for i=1,c do table.push(t,a[1]+math.sin(math.rad(z))*b[1])table.push(t,a[2]+math.cos(math.rad(180+z))*b[2])z=z+360/c end table.push(t,t[1])table.push(t,t[2])return t end

hook={}
hook.index={}
hook.list={}
hook.store={}
hook.new=function(a,b,c,d,e,f,g)a=a or 1 b=b or 1 c=c or"a"d=d or{0,0}e=e or{scrupp.getWindowSize()}f=f or function()end g=g or function()end
    local z=table.push(hook.index,0)hook.list[z]={a,b,c,d,e,f,g}return z
end
hook.old=function(a)a=a or 1 hook.list[a]=nil hook.store[a]=nil hook.index[a]=nil end
hook.pause=function(a)a=a or 1 if hook.list[a]and hook.store[a]==nil then hook.store[a]=hook.list[a]hook.list[a]=nil end end
hook.resume=function(a)a=a or 1 if hook.list[a]==nil and hook.store[a]then hook.list[a]=hook.store[a]hook.store[a]=nil end end

object={} --1661 max char limit?
object.list={}
object.store={}
object.layers={}
object.cache={}
object.create=function(a,b)a=a or"text"local z={}if a=="text"then local y=core.font()z={type=a,object={y:generateImage({b or"Placeholder",color={255,255,255,255}}),y},position={0,0},size=30,color={255,255,255,255},value=b or"Placeholder"}elseif a=="image"then local y=object.cache[b]if y==nil then y=core.image(b)object.cache[b or"dll/ico.png"]=y end z={type=a,object=y,position={0,0},size={1,1},color={255,255,255,255},value=b,rect={0,0,y:getWidth(),y:getHeight()}}elseif a=="shape"then z={type=a,object=shape[b or"square"](),position={0,0},size={1,1},color={255,255,255,255},value=b or"square"}end object.layers[1]=object.layers[1]or{}local x=table.push(object.layers[1],0)local w=table.push(object.list,{z,{1,x}})object.layers[1][x]=w return w end
object.update=function(a,b)a=a or 1 b=b or false if object.list[a][1].type=="text"then local z,y=object.list[a][1].object[2],string.sub(object.list[a][1].value,1,431)if b then z=core.font(object.list[a][1].size,object.list[a][1].font)object.list[a][1].object[2]=z end object.list[a][1].object[1]=z:generateImage({(y==""and" "or y),color=object.list[a][1].color}) elseif object.list[a][1].type=="image"then local z=object.list[a][1].value local y=object.cache[z]if y==nil then y=core.image(z)object.cache[z or"dll/ico.png"]=y end object.list[a][1].object=y elseif object.list[a][1].type=="shape"then object.list[a][1].object=shape[object.list[a][1].value](object.list[a][1].position,object.list[a][1].size,nil,object.list[a][1].color)end object.layers[object.list[a][2][1]][object.list[a][2][2]]=a end
object.remove=function(a)if object.layers[object.list[a][2][1]]and object.layers[object.list[a][2][1]][object.list[a][2][2]]then object.layers[object.list[a][2][1]][object.list[a][2][2]]=nil if table.count(object.layers[object.list[a][2][1]])==0 then object.layers[object.list[a][2][1]]=nil end end if object.store[object.list[a][2][1]]and object.store[object.list[a][2][1]][object.list[a][2][2]]then object.store[object.list[a][2][1]][object.list[a][2][2]]=nil if table.count(object.store[object.list[a][2][1]])==0 then object.store[object.list[a][2][1]]=nil end end object.list[a]=nil end
object.pos=function(a,b)a=a or 1 b=b or{0,0}object.list[a][1].position=b if object.list[a][1].type=="text"then  elseif object.list[a][1].type=="image"then local z=object.list[a][1].object if (b[1]-z:getWidth()/2)>0 and(b[2]-z:getHeight()/2)>0 and(b[1]+z:getWidth()/2)<scrupp.getWindowWidth()and(b[2]+z:getHeight()/2)<scrupp.getWindowHeight()then object.enable(a)else object.disable(a)end else end end
object.scale=function(a,b)a=a or 1 b=b or(object.list[a][1].type=="text"and 30 or{1,1})object.list[a][1].size=b if object.list[a][1].type=="text"then  elseif object.list[a][1].type=="image"then local z=object.list[a][1].position if (z[1]-b[1]/2)>0 and(z[2]-b[2]/2)>0 and(z[1]+b[1]/2)<scrupp.getWindowWidth()and(z[2]+b[2]/2)<scrupp.getWindowHeight()then object.enable(a)else object.disable(a)end else end end
object.color=function(a,b)a=a or 1 b=b or{}local c,d=object.list[a][1].color or{},{255,255,255,255}if b[1]>=0 then d[1]=b[1]elseif c[1]then d[1]=c[1]end if b[2]>=0 then d[2]=b[2]elseif c[2]then d[2]=c[2]end if b[3]>=0 then d[3]=b[3]elseif c[3]then d[3]=c[3]end if b[4]>=0 then d[4]=b[4]elseif c[4]then d[4]=c[4]end object.list[a][1].color=d if b[4]==0 then object.disable(a)else object.enable(a)end end
object.value=function(a,b)a=a or 1 b=b or""object.list[a][1].value=b end
object.rect=function(a,b)a=a or 1 local z=object.list[a][1].object b=b or{0,0,z:getWidth(),z:getHeight()}object.list[a][1].rect=b end
object.align=function(a,b,c)a=a or 1 b=b or 1 c=c or 1 local w,h=0,0 if object.list[a][1].type=="text"then local z=object.list[a][1].object[2]w,h=z:getTextSize(string.sub(object.list[a][1].value,1,431))elseif object.list[a][1].type=="image"then w,h=(object.list[a][1].object:getWidth()*object.list[a][1].size[1]),(object.list[a][1].object:getHeight()*object.list[a][1].size[2])elseif object.list[a][1].type=="shape"then w,h=1,1 end local x,y=w/2,h/2 if b==0 then x=0 end if c==0 then y=0 end if b==2 then x=w end if c==2 then y=h end object.list[a][1].position={object.list[a][1].position[1]-x,object.list[a][1].position[2]-y}end
object.layer=function(a,b)a=a or 1 b=b or 1 object.layers[object.list[a][2][1]][object.list[a][2][2]]=nil if table.count(object.layers[object.list[a][2][1]])==0 then object.layers[object.list[a][2][1]]=nil end object.layers[b]=object.layers[b]or{}object.list[a][2]={b,table.push(object.layers[b],a)}end
object.enable=function(a)a=a or 1 local b,c=object.list[a][2][1],object.list[a][2][2]if object.store[b]and object.store[b][c]then object.layers[b]=object.layers[b]or{}object.layers[b][c]=object.store[b][c]if table.count(object.store[b])==0 then object.store[b]=nil else object.store[b][c]=nil end end end
object.disable=function(a)a=a or 1 local b,c=object.list[a][2][1],object.list[a][2][2]if object.layers[b]and object.layers[b][c]then object.store[b]=object.store[b]or{}object.store[b][c]=object.layers[b][c]if table.count(object.layers[b])==0 then object.layers[b]=nil else object.layers[b][c]=nil end end end

animation={}
animation.list={}
animation.fadein=function(a,b,c,d)a=a or 1 b=b or 1 c=c or 1 d=d or function(a)end local e,f=0,table.push(animation.list,function()end)animation.list[f]=function()if object.list[a][1].color[4]>254 then animation.list[f]=nil d(a)else e=e+c if e==b then e=0 object.color(a,{-1,-1,-1,object.list[a][1].color[4]+1}) if object.list[a][1].type=="image"then else object.update(a)end end end end return f end
animation.fadeout=function(a,b,c,d)a=a or 1 b=b or 1 c=c or 1 d=d or function(a)end local e,f=0,table.push(animation.list,function()end)animation.list[f]=function()if object.list[a][1].color[4]<1 then animation.list[f]=nil d(a)else e=e+c if e==b then e=0 object.color(a,{-1,-1,-1,object.list[a][1].color[4]-1}) if object.list[a][1].type=="image"then else object.update(a)end end end end return f end

vgui={}
vgui.multipart=function(a,b,c)a=a or {}b=b or function()end c=c or{}local d,e={},0
    if a[1]=="button"then d={a[2],a[3]}e=4 end
    if a[1]=="square"then d={a[2]}e=3 end
    if a[1]=="circle"then d={a[2]}e=3 end
    if b==object.remove then hook.old(a[e])elseif b==object.color then if c[1][e]==0 then hook.pause(a[e])else hook.resume(a[e])end end
    for k,v in pairs(d)do b(v,c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])end
end
vgui.image=function(a,b,c,d,e,f)a=a or{0,0}b=b or"ico.png"c=c or{255,255,255,255}d=d or{1,1}e=e or{1,1}local g=object.create("image",b)object.pos(g,a)object.color(g,c)object.scale(g,d)object.align(g,e[1],e[2])object.update(g)return g end
vgui.button=function(a,b,c,d,e,f,g,h,i)a=a or{0,0}b=b or{1,1}c=c or function()end d=d or"Button"e=e or 30 f=f or "dll/fonts/Vera.ttf"g=g or{1,1}h=h or{255,255,255,255}i=i or{0,0,0,255}
    local z,y,x=object.create("shape"),object.create(),hook.new(2,2,"left",{a[1]-(b[1]/2),a[2]-(b[2]/2)},{a[1]+(b[1]/2),a[2]+(b[2]/2)},c)
    object.pos(z,a)object.scale(z,b)object.align(z,g)object.color(z,h)object.update(z)
    object.scale(y,e)object.value(y,d)object.list[y][1].font=f object.color(y,i)object.update(y,true)object.pos(y,a)object.align(y)
return{"button",z,y,x}end
vgui.square=function(a,b,c,d,e,f)a=a or{0,0}b=b or{1,1}c=c or 1 d=d or"pos"e=e or function()end f=f or function()end
    local z=hook.new(2,1,d,{a[1]-(b[1]/2),a[2]-(b[2]/2)},{a[1]+(b[1]/2),a[2]+(b[2]/2)},e,f)
return{"square",c,z}end
vgui.circle=function(a,b,c,d,e,f)a=a or{0,0}b=b or{1,1}c=c or 1 d=d or"pos"e=e or function()end f=f or function()end
    local z=hook.new(2,1,d,{a[1]-(b[1]/2),a[2]-(b[2]/2)},{a[1]+(b[1]/2),a[2]+(b[2]/2)},e,f)
return{"circle",c,z}end


core.title("LuaEngine",1600,900,32)
debug=object.create()object.layer(debug,1000)
local width,height=scrupp.getWindowSize()
local credit=object.create()object.list[credit][1].size=50 object.value(credit,"Created by")object.color(credit,{255,255,255,0})object.update(credit,true)object.pos(credit,{width/2,height/2})object.align(credit,1,0)
local creditname=object.create()object.list[creditname][1].size=50 object.value(creditname,"Zeluseffio")object.color(creditname,{255,255,255,0})object.update(creditname,true)object.pos(creditname,{width/2,(height/2)+object.list[credit][1].object[2]:getHeight()})object.align(creditname,1,0)
local crediticon=object.create("image")object.scale(crediticon,{0.5,0.5})object.pos(crediticon,{width/2,height/2})object.align(crediticon,1,2)--object.color(crediticon,{255,255,255,0})
local props=object.create()object.list[props][1].size=50 object.value(props,"Thanks to")object.color(props,{255,255,255,0})object.update(props,true)object.pos(props,{width/2,height/2})object.align(props,1,0)
local propsname=object.create()object.list[propsname][1].size=50 object.value(propsname,"Andreas Krinke")object.color(propsname,{255,255,255,0})object.update(propsname,true)object.pos(propsname,{width/2,(height/2)+object.list[props][1].object[2]:getHeight()})object.align(propsname,1,0)
local propsicon=object.create()object.list[propsicon][1].size=150 object.value(propsicon,"Scrupp")object.list[propsicon][1].font="dll/fonts/Winks.ttf"object.color(propsicon,{190,0,0,0})object.update(propsicon,true)object.pos(propsicon,{width/2,height/2})object.align(propsicon,1,2)
local gamesname=object.create()object.list[gamesname][1].size=50 object.value(gamesname,"Games")object.color(gamesname,{255,255,255,0})object.update(gamesname,true)object.pos(gamesname,{width/2,height/10})object.align(gamesname,1,2)
local gamesdesc=object.create()object.list[gamesdesc][1].size=20 object.value(gamesdesc,"Be causious when running unknown programs.")object.color(gamesdesc,{255,125,125,255})object.color(gamesdesc,{255,125,125,0})object.update(gamesdesc,true)object.pos(gamesdesc,{width/2,height/10})object.align(gamesdesc,1,0)
local back=vgui.button({width/10*9,height/10*9},{width/10,height/15},nil,"Back")vgui.multipart(back,object.color,{{-1,-1,-1,0}})
local games,browser,credits,quit={},{},{},{}
local function mainstate(a)
    vgui.multipart(games,object.color,{{-1,-1,-1,a*255}})vgui.multipart(games,object.update)
    vgui.multipart(browser,object.color,{{-1,-1,-1,a*255}})vgui.multipart(browser,object.update)
    vgui.multipart(credits,object.color,{{-1,-1,-1,a*255}})vgui.multipart(credits,object.update)
    vgui.multipart(quit,object.color,{{-1,-1,-1,a*255}})vgui.multipart(quit,object.update)
end
local gamelist={} vgui.button()
local function showgame()
    object.color(gamesname,{-1,-1,-1,255})object.update(gamesname)
    object.color(gamesdesc,{-1,-1,-1,255})object.update(gamesdesc)
    for k,v in pairs(file.dirs())do
        if file.exists("game/"..v.."/info.cfg")and file.exists("game/"..v.."/init.lua")then
            local z={}for l,i in pairs(string.explode(file.read("game/"..v.."/info.cfg"),"\n"))do
                local i=string.explode(i,"=")z[i[1]]=i[2]
            end table.push(gamelist,{
                vgui.button({width/2,height/7*(2+table.count(gamelist))},{width/6*2,height/10},function()purge()dofile(core.dir().."game/"..v.."/init.lua")end," "),
                object.create(),object.create(),object.create(),object.create()
            })local y=core.font(3):getLineSkip()
            object.pos(gamelist[table.count(gamelist)][2],{width/2-width/6*2/2+y,height/7*(1+table.count(gamelist))-(height/10/2)})object.value(gamelist[table.count(gamelist)][2],(z.title or"Unknown"))object.scale(gamelist[table.count(gamelist)][2],30)object.color(gamelist[table.count(gamelist)][2],{0,0,0,255})object.update(gamelist[table.count(gamelist)][2],true)object.align(gamelist[table.count(gamelist)][2],0,0)
            object.pos(gamelist[table.count(gamelist)][3],{width/2+width/6*2/2-y,-core.font():getHeight()/2+height/7*(1+table.count(gamelist))-(height/10/3.5)})object.value(gamelist[table.count(gamelist)][3],"Created by "..(z.author or"Unknown"))object.scale(gamelist[table.count(gamelist)][3],20)object.color(gamelist[table.count(gamelist)][3],{0,0,0,255})object.update(gamelist[table.count(gamelist)][3],true)object.align(gamelist[table.count(gamelist)][3],2,0)
            object.pos(gamelist[table.count(gamelist)][4],{width/2-width/6*2/2+y,height/10/5+y+height/7*(1+table.count(gamelist))+(height/10/5)})object.value(gamelist[table.count(gamelist)][4],"012345678901234567890123456789")object.scale(gamelist[table.count(gamelist)][4],20)object.color(gamelist[table.count(gamelist)][4],{0,0,0,255})object.update(gamelist[table.count(gamelist)][4],true)object.align(gamelist[table.count(gamelist)][4],0,2)
            object.pos(gamelist[table.count(gamelist)][5],{width/2+width/6*2/2-y,y+height/7*(1+table.count(gamelist))+(height/10/2.5)})object.value(gamelist[table.count(gamelist)][5],file.size("game/"..v.."/init.lua")or 0)object.scale(gamelist[table.count(gamelist)][5],20)object.color(gamelist[table.count(gamelist)][5],{0,0,0,255})object.update(gamelist[table.count(gamelist)][5],true)object.align(gamelist[table.count(gamelist)][5],2,2)
        end
    end
    vgui.multipart(back,object.color,{{-1,-1,-1,255}})vgui.multipart(back,object.update)
end
local function hidegame()
    vgui.multipart(back,object.color,{{-1,-1,-1,0}})vgui.multipart(back,object.update)
    object.color(gamesname,{-1,-1,-1,0})object.update(gamesname)
    object.color(gamesdesc,{-1,-1,-1,0})object.update(gamesdesc)
    for k,v in pairs(gamelist)do
        vgui.multipart(v[1],object.remove)
        object.remove(v[2])
        object.remove(v[3])
        object.remove(v[4])
        object.remove(v[5])
    end gamelist={}
end
local creditlist={}
local function showcredit()
    creditlist[1]=animation.fadein(credit)creditlist[2]=animation.fadein(creditname)creditlist[3]=animation.fadein(crediticon)
    creditlist[4]=animation.fadein(props)creditlist[5]=animation.fadein(propsname)creditlist[6]=animation.fadein(propsicon)
    vgui.multipart(back,object.color,{{-1,-1,-1,255}})vgui.multipart(back,object.update)
end
local function hidecredit()
    vgui.multipart(back,object.color,{{-1,-1,-1,0}})vgui.multipart(back,object.update)
    animation.list[creditlist[1]]=nil animation.list[creditlist[2]]=nil animation.list[creditlist[3]]=nil
    animation.list[creditlist[4]]=nil animation.list[creditlist[5]]=nil animation.list[creditlist[6]]=nil
    object.color(credit,{-1,-1,-1,0})object.update(credit)
    object.color(creditname,{-1,-1,-1,0})object.update(creditname)
    object.color(crediticon,{-1,-1,-1,0})object.update(crediticon)
    object.color(props,{-1,-1,-1,0})object.update(props)
    object.color(propsname,{-1,-1,-1,0})object.update(propsname)
    object.color(propsicon,{-1,-1,-1,0})object.update(propsicon)
end
games=vgui.button({width/2,height/10*2},{width/5*2,height/10},function()
    mainstate(0)showgame()hook.list[back[4]][6]=function()hidegame()mainstate(1)end
end,"Games",40)vgui.multipart(games,object.color,{{-1,-1,-1,0}})vgui.multipart(games,object.update)
browser=vgui.button({width/2,height/10*4},{width/5*2,height/10},function()
    
end,"Browser",40)vgui.multipart(browser,object.color,{{-1,-1,-1,0}})
credits=vgui.button({width/2,height/10*6},{width/5*2,height/10},function()
    mainstate(0)showcredit()hook.list[back[4]][6]=function()hidecredit()mainstate(1)end
end,"Credits",40)vgui.multipart(credits,object.color,{{-1,-1,-1,0}})vgui.multipart(credits,object.update)
quit=vgui.button({width/2,height/10*8},{width/5*2,height/10},scrupp.exit,"Quit",40)vgui.multipart(quit,object.color,{{-1,-1,-1,0}})vgui.multipart(quit,object.update)

function purge()
    object.remove(credit)object.remove(creditname)object.remove(crediticon)
    object.remove(props)object.remove(propsname)object.remove(propsicon)
    object.remove(gamesname)object.remove(gamesdesc)
    vgui.multipart(back,object.remove)
    vgui.multipart(games,object.remove)vgui.multipart(browser,object.remove)vgui.multipart(credits,object.remove)vgui.multipart(quit,object.remove)
    for k,v in pairs(gamelist)do vgui.multipart(v[1],object.remove)object.remove(v[2])object.remove(v[3])object.remove(v[4])object.remove(v[5])end
    width,height=nil,nil
    credit,creditname,crediticon=nil,nil,nil
    props,propsname,propsicon=nil,nil,nil
    gamesname,gamesdesc,back=nil,nil,nil
    games,browser,credits,quit=nil,nil,nil,nil
    showgame,hidegame=nil,nil
    showcredit,hidecredit=nil,nil
    mainstate,gamelist,creditlist=nil,nil,nil
    purge=nil
end

object.color(crediticon,{-1,-1,-1,0})
-- animation.fadein(credit,2,1,function(a)animation.fadeout(a)end)
-- animation.fadein(creditname,2,1,function(a)animation.fadeout(a)end)
-- animation.fadein(crediticon,2,1,function(a)animation.fadeout(a,1,1,function(a)--object.color(crediticon,{-1,-1,-1,0})
--     animation.fadein(props,2,1,function(a)animation.fadeout(a)end)
--     animation.fadein(propsname,2,1,function(a)animation.fadeout(a)end)
--     animation.fadein(propsicon,2,1,function(a)animation.fadeout(a,1,1,function(a)
--         vgui.multipart(games,animation.fadein)
--         vgui.multipart(browser,animation.fadein)
--         vgui.multipart(credits,animation.fadein)
--         vgui.multipart(quit,animation.fadein,{1,1,function()
--             object.pos(credit,{width/2,height/6*2})object.align(credit,1,0)
--             object.pos(creditname,{width/2,(height/6*2)+object.list[credit][1].object[2]:getHeight()})object.align(creditname,1,0)
--             object.pos(crediticon,{width/2,height/6*2})object.align(crediticon,1,2)
--             object.pos(props,{width/2,height/6*4})object.align(props,1,0)
--             object.pos(propsname,{width/2,(height/6*4)+object.list[props][1].object[2]:getHeight()})object.align(propsname,1,0)
--             object.pos(propsicon,{width/2,height/6*4})object.align(propsicon,1,2)
--         end})
--         -- vgui.multipart(games,object.color,{{-1,-1,-1,255}})vgui.multipart(games,object.update)
--         -- vgui.multipart(browser,object.color,{{-1,-1,-1,255}})vgui.multipart(browser,object.update)
--         -- vgui.multipart(credits,object.color,{{-1,-1,-1,255}})vgui.multipart(credits,object.update)
--         -- vgui.multipart(quit,object.color,{{-1,-1,-1,255}})vgui.multipart(quit,object.update)
--     end)end)
-- end)end)

object.pos(credit,{width/2,height/6*2})object.align(credit,1,0)
object.pos(creditname,{width/2,(height/6*2)+object.list[credit][1].object[2]:getHeight()})object.align(creditname,1,0)
object.pos(crediticon,{width/2,height/6*2})object.align(crediticon,1,2)
object.pos(props,{width/2,height/6*4})object.align(props,1,0)
object.pos(propsname,{width/2,(height/6*4)+object.list[props][1].object[2]:getHeight()})object.align(propsname,1,0)
object.pos(propsicon,{width/2,height/6*4})object.align(propsicon,1,2)
vgui.multipart(games,object.color,{{-1,-1,-1,255}})vgui.multipart(games,object.update)
vgui.multipart(browser,object.color,{{-1,-1,-1,255}})vgui.multipart(browser,object.update)
vgui.multipart(credits,object.color,{{-1,-1,-1,255}})vgui.multipart(credits,object.update)
vgui.multipart(quit,object.color,{{-1,-1,-1,255}})vgui.multipart(quit,object.update)


if scrupp.PLATFORM=="Windows"then else scrupp.showCursor(false)end
local held={}
main={
    resized=function(w,h)
	end,
    keypressed=function(k)
        held[k]="k"
	end,
    keyreleased=function(k)
        event[1][2][k]={0,0}
        held[k]=nil
	end,
    mousepressed=function(x,y,b)
        held[b]="b"
	end,
    mousereleased=function(x,y,b)
        event[2][2][b]={x,y}
        held[b]=nil
	end,
    render=function(d)
        object.value(debug,d.." "..(table.count(object.list)-1).." "..table.count(object.layers[1]).." "..table.count(hook.list).." "..table.count(hook.store))object.update(debug)
        for k,v in pairs(held)do event[(v=="k"and 1 or 2)][1][k]={scrupp.getMousePos()}end
        event[2][1]["pos"]={scrupp.getMousePos()}for k,v in pairs(animation.list)do v(d)end
        for k,v in pairs(hook.list)do local a=event[v[1]][v[2]][v[3]]if a then
            if a[1]>v[4][1]and a[1]<v[5][1]and a[2]>v[4][2]and a[2]<v[5][2]then v[6]()end
        end end core.run(d)event={{{},{}},{{},{}}}for k,v in pairs(object.layers)do
            for l,i in pairs(v)do
                local o=object.list[i][1]
                if o.type=="image"then
                    o.object:render({o.position[1],o.position[2],centerX=0,centerY=0,scaleX=o.size[1],scaleY=o.size[2],rotate=0,rect=o.rect,color=o.color})
                elseif o.type=="text"then
                    o.object[1]:render(o.position[1],o.position[2])
                elseif o.type=="shape"then
                    scrupp.draw(o.object)
                end
            end
        end
        if scrupp.PLATFORM=="Windows"then else
            scrupp.draw({size=13,antialiasing=true,color={0,0,0,255},scrupp.getMousePos()})
            scrupp.draw({size=10,antialiasing=true,scrupp.getMousePos()})
        end
    end
}